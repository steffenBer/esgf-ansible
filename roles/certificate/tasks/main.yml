
# Create environment in which to generate certificates
# Required for pyopenssl >= .15
- name: Create cert-gen conda environment
  command: "{{ conda.exe }} create -y -n cert-gen 'python<3' pyopenssl libselinux-cos6-x86_64"
  args:
    creates: "{{ conda.envs }}/cert-gen"

- name: selinux pip
  command: "/usr/local/conda/envs/cert-gen/bin/pip install selinux"

# Check for present certificate
- name: Check if {{ cert_dest }} exists
  when: cert_dest is defined
  stat:
    path: "{{ cert_dest }}"
  register: certpath

- name: Make a backup of {{ cert_dest }} to {{ cert_dest }}.{{ ansible_date_time.epoch }}
  when: cert_dest is defined and certpath.stat.exists
  copy:
    remote_src: yes
    src: "{{ cert_dest }}"
    dest: "{{ cert_dest }}.{{ ansible_date_time.epoch }}"

- name: Move certificate
  when: cert_dest is defined and certpath.stat.exists
  file:
    path: "{{ cert_dest }}"
    state: absent

# Use this python interpreter to generate key/csr and optionally self-sign
- name: "{{ common_name }} Certificate Tasks"
  import_tasks: cert.yml
